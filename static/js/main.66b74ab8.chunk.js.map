{"version":3,"sources":["store/actions/actionType.js","store/actions/quoteAction.js","store/actions/UIAction.js","Components/box/quotes/quotes.js","Components/box/manager/manager.js","Components/box/box.js","Container/App.js","store/reducer/quoteReducer.js","store/reducer/UIRedurcer.js","store/saga/quoteSaga.js","serviceWorker.js","index.js"],"names":["GENERATE_QUOTE","QUOTE","generate_quote","type","actionType","change_color","rgb","i","r","Math","floor","random","concat","Object","toConsumableArray","Quotes","_ref","quote","author","color","react_default","a","createElement","className","id","style","Manager","generate","changeColor","href","marginRight","background","onClick","Box","quotes_quotes","manager_manager","connect","state","dispatch","useEffect","backgroundColor","box_box","initState","reducer","arguments","length","undefined","action","watchFetchProducts","quoteSaga","regenerator_default","wrap","_context","prev","next","takeEvery","stop","_marked","this","getData","axios","get","data","_quote","_context2","call","sent","body","put","t0","console","log","_marked2","_context3","_marked3","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","quoteReducer","UIReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","thunk","run","app","es","src_Container_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66b74ab8.chunk.js","sourcesContent":["export const GENERATE_QUOTE = \"GENERATE_QUOTE\";\r\nexport const GENERATE_COLOR = \"GENERATE_COLOR\";\r\nexport const QUOTE = 'QUOTE'","import * as actionType from \"./actionType\";\r\n\r\n\r\nconst generate_quote = () => {\r\n  return {\r\n    type: actionType.QUOTE\r\n  }\r\n};\r\n\r\nexport default generate_quote;\r\n","import * as actionType from \"./actionType\";\r\n\r\nconst change_color = () => {\r\n  let rgb = [];\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    let r = Math.floor(Math.random() * 256);\r\n    rgb = [...rgb, r];\r\n  }\r\n\r\n  return {\r\n    type: actionType.GENERATE_COLOR,\r\n    rgb\r\n  };\r\n};\r\n\r\nexport default change_color;\r\n","import React from \"react\";\r\n\r\nimport \"./quotes.css\";\r\n\r\nconst Quotes = ({ quote, author, color }) => {\r\n  return (\r\n    <div className=\"quotes\">\r\n      <p id=\"text\" style={{ color: `rgb(${color})` }}>\r\n        <i className=\"fas fa-quote-left\" /> {quote}\r\n      </p>\r\n      <div id=\"author\" className=\"author\" style={{ color: `rgb(${color})` }}>\r\n        â€” {author}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import React from \"react\";\r\n\r\nimport \"./manager.css\";\r\n\r\nconst Manager = ({ generate, color, changeColor, quote, author }) => {\r\n  const handleClick = () => {\r\n    generate();\r\n    changeColor();\r\n  };\r\n\r\n  return (\r\n    <div className=\"manager\">\r\n      <div className=\"social\" style={{ color: `rgb(${color})` }}>\r\n        <a id=\"tweet-quote\" style={{color: 'inherit'}} href={`https://twitter.com/intent/tweet?text=${quote} ${author}`}><i className=\"fab fa-twitter fa-2x\" style={{ marginRight: \"10px\" }} /></a>\r\n      </div>\r\n      <div className=\"buttonBox\">\r\n        <div\r\n          id=\"new-quote\"\r\n          style={{ color: \"white\", background: `rgb(${color})` }}\r\n          className=\"button\"\r\n          onClick={handleClick}\r\n        >\r\n          New Quote\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Manager;\r\n","import React from \"react\";\r\n\r\nimport Quotes from \"Components/box/quotes/quotes\";\r\nimport Manager from \"Components/box/manager/manager\";\r\n\r\nimport \"./box.css\";\r\n\r\nconst Box = ({ generate, author, quote, color, changeColor }) => {\r\n  return (\r\n    <div id=\"quote-box\" className=\"box\">\r\n      <Quotes author={author} quote={quote} color={color} />\r\n      <Manager quote={quote} author={author} generate={generate} color={color} changeColor={changeColor} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport generate_quote from \"store/actions/quoteAction\";\nimport change_color from \"store/actions/UIAction\";\n\nimport Box from \"Components/box/box\";\n\nimport \"./App.css\";\n\nconst App = ({ generate, author, quote, color, changeColor }) => {\n  useEffect(() => {\n    generate();\n  }, []);\n  useEffect(() => {\n    changeColor();\n  }, []);\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: `rgb(${color})` }}>\n      <Box\n        generate={generate}\n        author={author}\n        quote={quote}\n        color={color}\n        changeColor={changeColor}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    quote: state.quote.quote,\n    author: state.quote.author,\n    color: state.color.color\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    generate: () => dispatch(generate_quote()),\n    changeColor: () => dispatch(change_color())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import * as actionType from \"store/actions/actionType\";\r\n\r\nconst initState = {\r\n  quote: \"\",\r\n  author: \"\"\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionType.GENERATE_QUOTE:\r\n      return {\r\n        quote: action.quote,\r\n        author: action.author\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionType from \"store/actions/actionType\";\r\n\r\nconst initState = {\r\n  color: \"\"\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionType.GENERATE_COLOR:\r\n      return {\r\n        color: action.rgb\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { call, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport axios from 'axios'\r\n\r\nimport * as actionType from 'store/actions/actionType';\r\n\r\nfunction* watchFetchProducts() {\r\n  yield takeEvery(actionType.QUOTE, quote)\r\n}\r\n\r\nconst getData = () => {\r\n    return axios.get('https://favqs.com/api/qotd')\r\n}\r\n\r\nexport function* quote() {\r\n    try {\r\n        const data = yield call(getData);\r\n        const quote = yield data.data.quote.body;\r\n        const author = yield data.data.quote.author;\r\n        yield put({\r\n        type: actionType.GENERATE_QUOTE,\r\n        quote,\r\n        author\r\n    })\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport default function* quoteSaga() {\r\n    yield watchFetchProducts()\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"index.css\";\nimport App from \"Container/App\";\n\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport createSagaMiddleware from 'redux-saga'\n\nimport thunk from \"redux-thunk\";\n\nimport quoteReducer from \"store/reducer/quoteReducer\";\nimport UIReducer from \"store/reducer/UIRedurcer\";\n\nimport quoteSaga from 'store/saga/quoteSaga'\n\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  quote: quoteReducer,\n  color: UIReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk, sagaMiddleware))\n);\n\nsagaMiddleware.run(quoteSaga)\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}