{"version":3,"sources":["store/actions/quoteAction.js","store/actions/actionType.js","store/actions/UIAction.js","Components/box/quotes/quotes.js","Components/box/manager/manager.js","Components/box/box.js","Container/App.js","store/reducer/quoteReducer.js","store/reducer/UIRedurcer.js","serviceWorker.js","index.js"],"names":["send_quote","quote","author","type","generate_quote","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","data","wrap","_context","prev","next","axios","get","sent","body","stop","this","_x","apply","arguments","change_color","rgb","i","r","Math","floor","random","concat","toConsumableArray","Quotes","color","react_default","createElement","className","id","style","Manager","generate","changeColor","href","marginRight","background","onClick","Box","quotes_quotes","manager_manager","connect","state","useEffect","backgroundColor","box_box","initState","reducer","length","undefined","action","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","quoteReducer","UIReducer","store","createStore","applyMiddleware","thunk","app","es","src_Container_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c8b88f9.chunk.js","sourcesContent":["import * as actionType from \"./actionType\";\r\nimport axios from \"axios\";\r\n\r\nconst send_quote = (quote, author) => {\r\n  return {\r\n    type: actionType.GENERATE_QUOTE,\r\n    quote,\r\n    author\r\n  };\r\n};\r\n\r\nconst generate_quote = () => {\r\n  return async dispatch => {\r\n    const data = await axios.get(\"https://favqs.com/api/qotd\");\r\n    const quote = await data.data.quote.body;\r\n    const author = await data.data.quote.author;\r\n    await dispatch(send_quote(quote, author));\r\n  };\r\n};\r\n\r\nexport default generate_quote;\r\n","export const GENERATE_QUOTE = \"GENERATE_QUOTE\";\r\nexport const GENERATE_COLOR = \"GENERATE_COLOR\";","import * as actionType from \"./actionType\";\r\n\r\nconst change_color = () => {\r\n  let rgb = [];\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    let r = Math.floor(Math.random() * 256);\r\n    rgb = [...rgb, r];\r\n  }\r\n\r\n  return {\r\n    type: actionType.GENERATE_COLOR,\r\n    rgb\r\n  };\r\n};\r\n\r\nexport default change_color;\r\n","import React from \"react\";\r\n\r\nimport \"./quotes.css\";\r\n\r\nconst Quotes = ({ quote, author, color }) => {\r\n  return (\r\n    <div className=\"quotes\">\r\n      <p id=\"text\" style={{ color: `rgb(${color})` }}>\r\n        <i className=\"fas fa-quote-left\" /> {quote}\r\n      </p>\r\n      <div id=\"author\" className=\"author\" style={{ color: `rgb(${color})` }}>\r\n        â€” {author}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import React from \"react\";\r\n\r\nimport \"./manager.css\";\r\n\r\nconst Manager = ({ generate, color, changeColor, quote, author }) => {\r\n  const handleClick = () => {\r\n    generate();\r\n    changeColor();\r\n  };\r\n\r\n  return (\r\n    <div className=\"manager\">\r\n      <div className=\"social\" style={{ color: `rgb(${color})` }}>\r\n        <a id=\"tweet-quote\" style={{color: 'inherit'}} href={`https://twitter.com/intent/tweet?text=${quote} ${author}`}><i className=\"fab fa-twitter fa-2x\" style={{ marginRight: \"10px\" }} /></a>\r\n      </div>\r\n      <div className=\"buttonBox\">\r\n        <div\r\n          id=\"new-quote\"\r\n          style={{ color: \"white\", background: `rgb(${color})` }}\r\n          className=\"button\"\r\n          onClick={handleClick}\r\n        >\r\n          New Quote\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Manager;\r\n","import React from \"react\";\r\n\r\nimport Quotes from \"Components/box/quotes/quotes\";\r\nimport Manager from \"Components/box/manager/manager\";\r\n\r\nimport \"./box.css\";\r\n\r\nconst Box = ({ generate, author, quote, color, changeColor }) => {\r\n  return (\r\n    <div id=\"quote-box\" className=\"box\">\r\n      <Quotes author={author} quote={quote} color={color} />\r\n      <Manager quote={quote} author={author} generate={generate} color={color} changeColor={changeColor} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport generate_quote from \"store/actions/quoteAction\";\nimport change_color from \"store/actions/UIAction\";\n\nimport Box from \"Components/box/box\";\n\nimport \"./App.css\";\n\nconst App = ({ generate, author, quote, color, changeColor }) => {\n  useEffect(() => {\n    generate();\n  }, []);\n  useEffect(() => {\n    changeColor();\n  }, []);\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: `rgb(${color})` }}>\n      <Box\n        generate={generate}\n        author={author}\n        quote={quote}\n        color={color}\n        changeColor={changeColor}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    quote: state.quote.quote,\n    author: state.quote.author,\n    color: state.color.color\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    generate: () => dispatch(generate_quote()),\n    changeColor: () => dispatch(change_color())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import * as actionType from \"store/actions/actionType\";\r\n\r\nconst initState = {\r\n  quote: \"\",\r\n  author: \"\"\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionType.GENERATE_QUOTE:\r\n      return {\r\n        quote: action.quote,\r\n        author: action.author\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionType from \"store/actions/actionType\";\r\n\r\nconst initState = {\r\n  color: \"\"\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionType.GENERATE_COLOR:\r\n      return {\r\n        color: action.rgb\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"index.css\";\nimport App from \"Container/App\";\n\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport quoteReducer from \"store/reducer/quoteReducer\";\nimport UIReducer from \"store/reducer/UIRedurcer\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  quote: quoteReducer,\n  color: UIReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}